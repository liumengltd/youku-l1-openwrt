name: Build OpenWrt for youku_yk-l1 (lean, PassWall sing-box + zh-cn)

on:
  workflow_dispatch:
    inputs:
      OPENWRT_BRANCH:
        description: "OpenWrt 稳定分支或标签（默认 openwrt-24.10，可填 v24.10.x）"
        default: "openwrt-24.10"
        required: true
      KEEP_CONFIG:
        description: "复用上次 .config（true/false）"
        default: "false"
        required: true

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: write

    env:
      TZ: Asia/Shanghai
      TMPDIR: ${{ github.workspace }}/tmp
      # LEAN: 去掉 v2ray-geoip/geosite、ntfs-3g、uas 模块，尽量缩小镜像
      EXTRA_PACKAGES: >
        luci
        luci-compat
        luci-app-wol
        luci-i18n-base-zh-cn
        luci-i18n-wol-zh-cn
        luci-theme-argon
        frpc
        luci-app-passwall
        luci-i18n-passwall-zh-cn
        sing-box
        block-mount kmod-usb-storage kmod-fs-ext4

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Free disk space (dotnet / android / ghc)
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo docker image prune -af || true
          df -h

      - name: Prepare tmp dir & show env
        run: |
          mkdir -p "${TMPDIR}"
          echo "TMPDIR=${TMPDIR}"
          df -h
          echo "CPU cores: $(nproc)"

      - name: Install build deps
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
            gettext git libncurses5-dev libssl-dev python3 python3-distutils rsync unzip wget zlib1g-dev \
            file time ccache upx-ucl
          df -h

      - name: Fetch OpenWrt
        run: |
          git clone https://github.com/openwrt/openwrt.git openwrt
          cd openwrt
          git fetch --tags --force
          git checkout "${{ github.event.inputs.OPENWRT_BRANCH || 'openwrt-24.10' }}"

      - name: Add & update feeds (with retry)
        working-directory: openwrt
        run: |
          set -e
          if ! grep -q '^src-git luci ' feeds.conf.default 2>/dev/null; then
            cat > feeds.conf.default << 'EOF'
          src-git packages https://git.openwrt.org/feed/packages.git
          src-git luci https://git.openwrt.org/project/luci.git
          src-git routing https://git.openwrt.org/feed/routing.git
          src-git telephony https://git.openwrt.org/feed/telephony.git
          EOF
          fi
          {
            echo ""
            echo "# PassWall"
            echo "src-git passwall https://github.com/xiaorouji/openwrt-passwall"
            echo ""
            echo "# PassWall packages (chinadns-ng / dns2socks / tcping etc.)"
            echo "src-git passwall_packages https://github.com/xiaorouji/openwrt-passwall-packages"
            echo ""
            echo "# Automount"
            echo "src-git automount https://github.com/sirpdboy/automount"
            echo ""
            echo "# FRP (client only)"
            echo "src-git frp https://github.com/kuoruan/openwrt-frp"
            echo ""
            echo "# Argon theme"
            echo "src-git argon https://github.com/jerrykuku/luci-theme-argon"
          } >> feeds.conf.default
          try_update(){ for i in 1 2 3; do echo "== Feeds update $i =="; ./scripts/feeds update -a && return 0; sleep 5; done; return 1; }
          try_install(){ for i in 1 2 3; do echo "== Feeds install $i =="; ./scripts/feeds install -a && return 0; sleep 5; done; return 1; }
          try_update
          try_install
          for d in luci routing telephony packages passwall passwall_packages automount frp argon; do
            [ -d "feeds/$d" ] || { echo "::error ::feeds/$d 不存在"; ls -la feeds || true; exit 1; }
          done
          ls -la feeds
          df -h

      - name: Create/restore .config (ramips/mt7620 -> youku_yk-l1 ONLY)
        working-directory: openwrt
        run: |
          if [ "${{ github.event.inputs.KEEP_CONFIG }}" = "true" ] && [ -f ../.config.saved ]; then
            echo "Reusing previous .config"
            cp ../.config.saved .config
          else
            rm -f .config
            {
              echo "CONFIG_TARGET_ramips=y"
              echo "CONFIG_TARGET_ramips_mt7620=y"
              echo "CONFIG_TARGET_MULTI_PROFILE=n"
              echo "CONFIG_TARGET_ALL_PROFILES=n"
            } >> .config
            sed -i '/^CONFIG_TARGET_DEVICE_ramips_mt7620_DEVICE_/d' .config
            echo 'CONFIG_TARGET_DEVICE_ramips_mt7620_DEVICE_youku_yk-l1=y' >> .config

            # 预装（精简版本）
            for p in $EXTRA_PACKAGES; do
              echo "CONFIG_PACKAGE_${p}=y" >> .config
            done

            # PassWall 仅 zh-cn
            echo 'CONFIG_PACKAGE_luci-i18n-passwall-zh-cn=y' >> .config
            for lang in ar bg bn ca cs da de el es et fa fi fr he hi hr hu id it ja ko ms nb-no nl pl pt pt-br ro ru sk sl sr sv th tr uk vi zh-tw; do
              echo "CONFIG_PACKAGE_luci-i18n-passwall-${lang}=n" >> .config
            done

            # PassWall 内核仅 sing-box，禁用其余
            echo 'CONFIG_PACKAGE_sing-box=y' >> .config
            {
              echo 'CONFIG_PACKAGE_xray-core=n'
              echo 'CONFIG_PACKAGE_v2ray-core=n'
              echo 'CONFIG_PACKAGE_naiveproxy=n'
              echo 'CONFIG_PACKAGE_hysteria=n'
              echo 'CONFIG_PACKAGE_hysteria2=n'
              echo 'CONFIG_PACKAGE_tuic-client=n'
              echo 'CONFIG_PACKAGE_brook=n'
              echo 'CONFIG_PACKAGE_trojan=n'
              echo 'CONFIG_PACKAGE_trojan-go=n'
              echo 'CONFIG_PACKAGE_shadowsocks-libev-ss-local=n'
              echo 'CONFIG_PACKAGE_shadowsocks-libev-ss-redir=n'
              echo 'CONFIG_PACKAGE_shadowsocks-rust-sslocal=n'
              echo 'CONFIG_PACKAGE_shadowsocks-rust-ssredir=n'
              echo 'CONFIG_PACKAGE_sing-box-with-plugins=n'
            } >> .config

            # PassWall 小工具（为避免缺包 warning）
            echo 'CONFIG_PACKAGE_chinadns-ng=y' >> .config
            echo 'CONFIG_PACKAGE_dns2socks=y' >> .config
            echo 'CONFIG_PACKAGE_tcping=y' >> .config

            # 不编译 frps
            echo 'CONFIG_PACKAGE_frps=n' >> .config

            # 体积优化（保留 dnsmasq-full）
            {
              echo '# CONFIG_PACKAGE_dnsmasq is not set'
              echo 'CONFIG_PACKAGE_dnsmasq-full=y'
              echo 'CONFIG_DEBUG_KERNEL=n'
              echo 'CONFIG_KERNEL_DEBUG_FS=n'
            } >> .config
          fi
          make defconfig
          cp .config ../.config.saved
          df -h

      - name: Default LuCI language & theme (zh_cn + argon)
        working-directory: openwrt
        run: |
          mkdir -p files/etc/config
          {
            echo "config core 'main'"
            echo "    option lang 'zh_cn'"
            echo "    option mediaurlbase '/luci-static/argon'"
          } > files/etc/config/luci

      - name: Enable ccache & download sources
        working-directory: openwrt
        run: |
          echo 'CONFIG_DEVEL=y' >> .config
          echo 'CONFIG_CCACHE=y' >> .config
          make defconfig
          make download -j$(nproc)
          df -h

      - name: Build (only youku_yk-l1 images)
        working-directory: openwrt
        run: |
          set -e
          echo "Start build (TARGET_DEVICES=youku_yk-l1)"
          if ! make -j"$(nproc)" TARGET_DEVICES=youku_yk-l1; then
            echo "Parallel build failed, retry with -j1 V=s"
            make -j1 V=s TARGET_DEVICES=youku_yk-l1
          fi

      - name: Package outputs
        run: |
          mkdir -p output
          cp -av openwrt/bin/targets/ramips/mt7620/* output/ || true
          cp -av .config.saved output/seed.config
          cp -av openwrt/feeds.conf.default output/feeds.conf.default
          df -h

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-youku_yk-l1-singbox-zhcn-lean
          path: output
